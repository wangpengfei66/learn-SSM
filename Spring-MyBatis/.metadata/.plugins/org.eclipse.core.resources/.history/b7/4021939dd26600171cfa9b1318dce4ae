package com.kaishengit;

import javax.sql.DataSource;

import org.apache.commons.dbcp2.BasicDataSource;
import org.apache.ibatis.session.SqlSessionFactory;
import org.mybatis.spring.SqlSessionFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;
import org.springframework.core.env.Environment;
import org.springframework.core.io.support.PathMatchingResourcePatternResolver;
import org.springframework.core.io.support.ResourcePatternResolver;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@Configuration
@ComponentScan
@EnableTransactionManagement
@PropertySource("classpath:config.properties")
public class Application {

	@Autowired
	Environment environment;
	
	//配置数据库连接池
	@Bean
	public DataSource dataSource() {
		BasicDataSource basicDataSource = new BasicDataSource();
		basicDataSource.setDriverClassName(environment.getProperty("jdbc.driver"));
		basicDataSource.setUrl(environment.getProperty("jdbc.url"));
		basicDataSource.setUsername(environment.getProperty("jdbc.username"));
		basicDataSource.setPassword(environment.getProperty("jdbc.password"));
		return basicDataSource;
	}
	//事务管理器
	@Bean
	public DataSourceTransactionManager transactionManager () {
		return new DataSourceTransactionManager(dataSource());
	}
	
	//SqlSessionFactory
	public SqlSessionFactoryBean sqlSessionFactory() {
		SqlSessionFactoryBean factory = new SqlSessionFactoryBean();
		factory.setDataSource(dataSource());
		factory.setTypeAliasesPackage("com.kaishengit.entity");
		
		//加载mapper配置文件
		ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();
		resolver.getResources("classpath:mapper/*.xml");
	}
	
	
	
	
	
}
